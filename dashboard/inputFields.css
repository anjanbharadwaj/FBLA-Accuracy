:root {
    /* generic */
    --gutterSm: 0.4rem;
    --gutterMd: 0.8rem;
    --gutterLg: 1.6rem;
    --gutterXl: 2.4rem;
    --gutterXx: 7.2rem;
    --colorPrimary400: #8f4a56;
    --colorPrimary600: #8f0d06;
    --colorPrimary800: #651000;
    --fontSizeSm: 1.2rem;
    --fontSizeMd: 1.6rem;
    --fontSizeLg: 2.1rem;
    --fontSizeXl: 2.8rem;
    --fontSizeXx: 3.6rem;
    --fontSizeAA: 1.4rem;
    --lineHeightSm: 1.1;
    --lineHeightMd: 1.8;
    --transitionDuration: 300ms;
    --transitionTF: cubic-bezier(0.645, 0.045, 0.355, 1);
    /* floated labels */
    --inputPaddingV: var(--gutterMd);
    --inputPaddingH: var(--gutterMd);
    --inputFontSize: var(--fontSizeAA);
    --inputLineHeight: var(--lineHeightMd);
    --labelScaleFactor: 0.8;
    --labelDefaultPosY: 50%;
    --labelTransformedPosY: calc(
            (var(--labelDefaultPosY)) -
            (var(--inputPaddingV) * var(--labelScaleFactor)) -
            (var(--inputFontSize) * var(--inputLineHeight))
    );
    --inputTransitionDuration: var(--transitionDuration);
    --inputTransitionTF: var(--transitionTF);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

@media only screen and (max-width:420px) {
    #accNW {
        width: 100% !important;
    }

    #creditW {
        width: 70% !important;
    }

    #debitW {
        width: 70% !important;
    }

    #addLedgerB {
        margin: 0 auto;
        display: block !important;
        width: 30% !important;
        border-radius:5px !important;
    }

    .Wrapper {
        padding: 30px 30px 15px 30px !important;
    }
}

.Wrapper {
    padding: 30px;
}

.Input {
    position: relative;
}

.Input-text {
    display: block;
    margin: 0;
    padding: var(--inputPaddingV) var(--inputPaddingH);
    color: inherit;
    width: 100%;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    border: 2px solid #dce1e4;
    border-radius: 0.4rem;
    transition: box-shadow var(--transitionDuration);
}

.Input-text::-webkit-input-placeholder {
    color: #B0BEC5;
}

.Input-text:-ms-input-placeholder {
    color: #B0BEC5;
}

.Input-text::-ms-input-placeholder {
    color: #B0BEC5;
}

.Input-text::placeholder {
    color: #B0BEC5;
}

.Input-text:focus {
    outline: none;
    border:none;
    box-shadow: 0.2rem 0.8rem 1.6rem var(--colorPrimary600);
}

.Input-label {
    display: block;
    position: absolute;
    bottom: 50%;
    left: 1rem;
    color: black;
    font-family: inherit;
    font-size: var(--inputFontSize);
    font-weight: inherit;
    line-height: var(--inputLineHeight);
    opacity: 0;
    -webkit-transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
    transform: translate3d(0, var(--labelDefaultPosY), 0) scale(1);
    -webkit-transform-origin: 0 0;
    transform-origin: 0 0;
    transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF), visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF), z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF), -webkit-transform var(--inputTransitionDuration) var(--inputTransitionTF);
    transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF), transform var(--inputTransitionDuration) var(--inputTransitionTF), visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF), z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF);
    transition: opacity var(--inputTransitionDuration) var(--inputTransitionTF), transform var(--inputTransitionDuration) var(--inputTransitionTF), visibility 0ms var(--inputTransitionDuration) var(--inputTransitionTF), z-index 0ms var(--inputTransitionDuration) var(--inputTransitionTF), -webkit-transform var(--inputTransitionDuration) var(--inputTransitionTF);
}

.Input-text:placeholder-shown + .Input-label {
    visibility: hidden;
    z-index: -1;
}

.Input-text:not(:placeholder-shown) + .Input-label,
.Input-text:focus:not(:placeholder-shown) + .Input-label {
    visibility: visible;
    z-index: 1;
    opacity: 1;
    -webkit-transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
    transform: translate3d(0, var(--labelTransformedPosY), 0) scale(var(--labelScaleFactor));
    transition: visibility 0ms, z-index 0ms, -webkit-transform var(--inputTransitionDuration);
    transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms;
    transition: transform var(--inputTransitionDuration), visibility 0ms, z-index 0ms, -webkit-transform var(--inputTransitionDuration);
}
